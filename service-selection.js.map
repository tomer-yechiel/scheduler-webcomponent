{"version":3,"file":"service-selection.js","sourceRoot":"","sources":["src/service-selection.ts"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;;AAEvB,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAUnD,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAAzC;;QAEL,aAAQ,GAAc,EAAE,CAAC;IAgC3B,CAAC;IAtBC,8DAA8D;IACrD,MAAM;QACb,OAAO,IAAI,CAAA;;;UAGL,IAAI,CAAC,QAAQ,CAAC,GAAG,CACjB,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAA;yBACF,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;gBAC5C,OAAO,CAAC,IAAI,aAAa,OAAO,CAAC,KAAK,WAAW,OAAO,CAAC,IAAI;;WAElE,CACF;;KAEJ,CAAC;IACJ,CAAC;IAED,oDAAoD;IAC5C,eAAe,CAAC,OAAgB;QACtC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,+DAA+D;QAC/D,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,kBAAkB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;;AA1BD,+CAA+C;AAC/B,uBAAM,GAAG,GAAG,CAAA;;GAE3B,AAFqB,CAEpB;AARF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;kDACC;AAGzB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;yDACC;AALf,gBAAgB;IAD5B,aAAa,CAAC,mBAAmB,CAAC;GACtB,gBAAgB,CAkC5B","sourcesContent":["// service-selection.ts\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n// Define the structure of a service\r\ninterface Service {\r\n  name: string;\r\n  price: number;\r\n  time: string;\r\n}\r\n\r\n@customElement('service-selection')\r\nexport class ServiceSelection extends LitElement {\r\n  @property({type: Array})\r\n  services: Service[] = [];\r\n\r\n  @property({type: Object})\r\n  selectedService?: Service;\r\n\r\n  // Define styles for the service selection page\r\n  static override styles = css`\r\n    /* Add your styles for the service selection page */\r\n  `;\r\n\r\n  // Render method to define the HTML structure of the component\r\n  override render() {\r\n    return html`\r\n      <h2>Select a Service:</h2>\r\n      <ul>\r\n        ${this.services.map(\r\n          (service) => html`\r\n            <li @click=${() => this._onServiceClick(service)}>\r\n              ${service.name} - Price: ${service.price}, Time: ${service.time}\r\n            </li>\r\n          `\r\n        )}\r\n      </ul>\r\n    `;\r\n  }\r\n\r\n  // Handle the click event when a service is selected\r\n  private _onServiceClick(service: Service) {\r\n    this.selectedService = service;\r\n    // Dispatch an event to signal that a service has been selected\r\n    this.dispatchEvent(new CustomEvent('service-selected', {detail: service}));\r\n  }\r\n}\r\n"]}